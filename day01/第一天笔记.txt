前端渐进式框架 -- Vue
    多个方法封装成一个库 多个库组成一个框架
    jquery--js库
    vue是一套构建用户UI界面的渐进式框架
    什么是渐进式框架:
        vue的核心功能是声明式渲染 将声明的数据渲染到视图展示
        单独使用不能称之为框架(jq是以dom为驱动,vue是以数据为驱动)
        1. 可以在vue核心功能的基础上添加其他功能 比如组件系统 路由系统等来构成一个完整的框架
        2. 重要的是 这些功能相互之间都是独立的 可以随意添加一个或多个 随机组合
        3. Vue的主张方式就是没有强主张 
        
    2. Vue是一个轻量级的以数据为驱动的MVVM框架
        其核心就是一个响应式的数据绑定系统
        常用于SPA应用(SINGle PAge Application 单页应用)

        MVVM:
        M: Model 模型层 数据层  - 绑定数据 渲染到视图上
        V: View 视图层          - 页面 显示给用户看的 
        VM: view-model          - 将视图层与模型层关联起来 起一个桥梁作用

        当model的数据发生变化时 视图页面也会随之发生改变
        当视图页面发送裱花时 数据也会跟着一起改变
        这就是数据的双向绑定


    3. Vue的基本用法
        1) 在页面中引入vue.js文件
        2) 定义挂载点
            <div id="app"></div>
        3) 创建Vue实例对象
            new Vue({
                el:"app", // 指定挂载点在哪个元素点上
                data:{  // 声明响应式的数据

                }
            })
    
    4. Vue的指令
        Vue在使用过程中会给标签添加一些以v-开头的属性 
        这些属性就叫指令
        本质上就是Vue对html标签属性的一个封装
        一般是操作dom

        4.1) v-text / v-html 
            用于渲染数据 作用于{{}}类似
            v-text: 会将数据作为字符串显示 不解析其中标签
            v-html: 会将字符串中的标签解析出来

        4.2) v-if / v-else-if / v-else / v-show
            控制节点是否显示在页面上 
            v-if如果为false 则直接将该节点从DOM上移除
            v-show只是添加了display:none属性 节点依然还在dom数上
            使用场景:
                页面加载时 就已经决定某节点是否显示 且不再改变 使用v-if
                如果页面加载后 需要频繁的显示隐藏节点 使用v-show 
            
        4.3) v-for 
            遍历数组 生成一组相同或相似的dom节点

        4.4) v-on
            绑定事件
                v-on:事件名称 v-on:click v-on:blur v-on:focus 
            可以简写成
                @:事件名称 @:click @:blur @:focus
            只触发一次
                @:事件名称.once

        4.5) v-bind 
            绑定属性
                v-bind:属性名="值"
            可以简写:
                :属性名="值"
            多个值
                :属性名="[值,值]"

        4.6) v-model 
            只能适用于有value属性的标签
            绑定vue实例的属性值 实现数据的双向绑定

    5. template模板
        vue中的模板声明了数据和最终展现给用户的DOM之间的关系
        template是直接替换原来的节点
        模板中必须包含一个根节点
        模板的定义有三种方式:
            1.直接定义在选项中
            2.定义在template标签中
            3.定义在script标签中

    6. 生命周期
        beforeCreate            创建vue实例之前
        created                 创建vue实例之后
        beforeMount             将vue实例挂载到DOM树之前
        mounted                 将vue实例挂载到DOM树之后
        beforeUpdate            更新DOM之前
        update                  更新DOM之后
        beforeDestroy           销毁vue实例之前
        destroyed               销毁vue实例之后

    7. 计算属性
        // data:{},
        computed: {
           *** 
        }, 
        通过已经存在的属性值计算后 得到一个新的值
        1. 当依赖值发生变化后 会触发计算属性重新计算
        2. 依赖的数据如果没有发生变化 则计算属性不会在视图更新时执行 因为计算属性会缓存计算过后的值
        
        何时用计算属性
            当需要通过旧有的值计算得打一个全新的值得时候 就可以使用计算属性 这样可以节省性能的消耗

    8. watch监听
        监听某个数据(data中的数据) 当发生改变时 进行操作
        当某个数据的改变影响到其他数据的时候 就可以使用watch操作数据
        watch(){
            num(newVal,oldVal){

            }
        }




















































































































    

